{"name":"jQuery Uptime Robot Monitor plugin","tagline":"This plugin allows you to show off the servers uptimes monitored by Uptime Robot.","body":"Jquery Uptime Robot Plugin\r\n==========================\r\n\r\nThe plugin uses UptimeRobot (http://uptimerobot.com/) API's to display the server statuses. It displays the current server status as UP or DOWN and has the capacity to display uptimes for a max 3 custom days range.\r\n\r\nUsage\r\n-----\r\n\r\nMake sure to include jquery script before proceeding. Include the plugin script in the head of the HTML page.\r\n\r\n\t<script type=\"text/javascript\" \r\n\t\tsrc=\"http://shreyaspurohit.github.io/jquery.plugin.uptimeRobotMonitor/src/js/jquery.uptimeRobotMonitor.js\"></script>\r\n\t\r\nOn document ready, call the plugin by providing the minimum configurations - monitor API Key (generated from your uptime robot control panel) and a server name to display.\r\n\t\r\n\t$( document ).ready(function() {\r\n\t\tvar timerId = $(\"body\").uptimeRobotMonitor(options);\r\n\t});\r\n\r\nExample:\r\n\t\r\n\t$( document ).ready(function() {\r\n\tvar timerId = $(\"body\").uptimeRobotMonitor({monitorConfs: [\r\n\t\t{\r\n\t\t\tapiKey: \"XXX\",\r\n\t\t\tname: \"Server 1\",\r\n\t\t\tcolor: \"#5CB85C\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tapiKey: \"XXX\",\r\n\t\t\tname: \"Server 2\",\r\n\t\t\tcolor: \"#957EE6\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tapiKey: \"XXX\",\r\n\t\t\tname: \"Server 3\",\r\n\t\t\tcolor: \"#E67EA8\",\r\n\t\t}]});\r\n\t});\r\n\t\t\t\r\nOptions\r\n-------\r\nDefault:\r\n\r\n\t{\r\n\t    monitorConfs: [{\r\n\t    \tapiKey: \"\",\r\n\t    \tname: \"\",\r\n\t    \tcolor: \"#5CB85C\",\r\n        \tunavailableColor: \"#E68A00\",\r\n        \tbackgroundColor: \"#f5f5f5\",\r\n        \tpercLabelColor: \"#000000\",\t\t            \t\r\n        \tcustomUptimeRatio: \"1-7\"\r\n\t    }],\t\t\t            \r\n\t    color: \"green\",\r\n\t    backgroundColor: \"#F5F5F5\",\r\n\t    width: \"640\",\r\n\t    height: \"240\",\r\n\t    containerClass: \"uptimeContainer\",\r\n\t    containerId: \"uptimeContainer\",\r\n\t    font: \"12px Arial\",\r\n\t    refresh: true,\r\n        refreshInterval: 60\t    \r\n    }\r\n    \r\n* monitorConfs: Configuration for every monitor.\r\n\t* apiKey: The monitor API Key (generated from your uptime robot control panel). Refer http://uptimerobot.com/api for more details.\r\n\t* color: The base color for this monitor.\r\n\t* unavailableColor: The color to use to designate server was not available.\r\n\t* backgroundColor: The background color to use for this monitor.\r\n\t* percLabelColor: The color of the text font for this monitor.\r\n\t* customUptimeRatio: In the increasing order, the custom uptime server stats in days separated by \"-\". \"1-7\" means, server monitor stats for 1 and 7 days.\r\n    * refresh: If true refresh's the the sever status repeatedly.\r\n    * refreshInterval: The interval at which the server status will refresh continuously in seconds.\t\r\n* color: The font color in the container containing all the monitors.\r\n* backgroundColor: The background color of the container containing the monitors.\r\n* width: Width of the container.\r\n* height: Height of the container.\r\n* containerClass: The CSS class associated with container that you can target.\r\n* containerId: The 'id' of the container. When using multiple rows of monitor's in the same page this option must be set to unique values.\r\n* font: The font size followed by the font type.\r\n\r\nReturn value\r\n------------\r\n\r\nThe plugin returns the timerId that can be used to cancel the interval set for refreshing server status. Use window.clearInterval(timerId) to stop data refresh dynamically.\r\n\r\nConstraints\r\n-----------\r\n\r\n* Number of custom uptime ratio's is limited to first 3. If you provide for eg, 1-7-30-360, only 1,7 and 30 are considered.\r\n* Width and Height provided by the options must be sufficient enough to hold all monitors. This is not automated. If not, monitors over write. Just increase the width in which case.\r\n* Only one row of monitors is supported. To add more monitors create a new row by calling the API again with a new 'containerId' option. This is important to be unique or else the graphics will overwrite.\r\n* The states refresh configuration is in seconds. The max rate at which all monitors in a row will refresh is 1 sec.\r\n\r\nLive in Action\r\n--------------\r\n\r\nThe plugin can be seen live in action http://shreyaspurohit.github.io/jquery.plugin.uptimeRobotMonitor/static/servers.html and http://unlockalert.bitourea.com/server-status which uses the uptime monitors for my servers.\r\n\r\nProject Site\r\n------------\r\n\r\nThe project site is generated using the github pages and modified. It is hosted at http://shreyaspurohit.github.io/jquery.plugin.uptimeRobotMonitor/.\r\n\r\nLicensing\r\n---------\r\nReleased under MIT license, go ahead and use, modify, distribute as you wish, but do not forget to include the associated license too with it. The license is provided in LICENSE.txt. The license of other libraries used must be used as defined by them.   \t\t\t","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}